{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// ✅ Add authentication token to every request using an interceptor\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.warn(\"⚠️ No authentication token found!\");\n  }\n  return req;\n});\n\n// ✅ Auth API (Register & Login)\nexport const register = async userData => API.post('/auth/register', userData);\nexport const login = async userData => {\n  try {\n    const response = await API.post('/auth/login', userData);\n    if (response.data.token) {\n      localStorage.setItem(\"token\", response.data.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n      console.log(\"✅ Token stored successfully!\", response.data.token);\n    } else {\n      console.error(\"⚠️ No token received from server.\");\n    }\n    return response.data;\n  } catch (err) {\n    console.error(\"Login error:\", err);\n    throw err;\n  }\n};\n\n// ✅ Goals API\nexport const fetchGoals = async () => API.get('/goals');\nexport const createGoal = async newGoal => API.post('/goals', newGoal);\nexport const updateGoal = async (id, updatedGoal) => API.put(`/goals/${id}`, updatedGoal);\nexport const deleteGoal = async id => API.delete(`/goals/${id}`);\n\n// ✅ Statements API (Ensuring token is passed manually)\nexport const fetchStatements = async () => {\n  const token = localStorage.getItem(\"token\");\n  return API.get('/statements', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const createStatement = async newStatement => {\n  const token = localStorage.getItem(\"token\");\n  return API.post('/statements', newStatement, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const updateStatement = async (id, updatedStatement) => {\n  const token = localStorage.getItem(\"token\");\n  return API.put(`/statements/${id}`, updatedStatement, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const deleteStatement = async id => {\n  const token = localStorage.getItem(\"token\");\n  return API.delete(`/statements/${id}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","console","warn","register","userData","post","login","response","data","setItem","JSON","stringify","user","log","error","err","fetchGoals","get","createGoal","newGoal","updateGoal","id","updatedGoal","put","deleteGoal","delete","fetchStatements","createStatement","newStatement","updateStatement","updatedStatement","deleteStatement"],"sources":["D:/Bill Pocket Project/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\n// ✅ Add authentication token to every request using an interceptor\r\nAPI.interceptors.request.use((req) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    req.headers.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    console.warn(\"⚠️ No authentication token found!\");\r\n  }\r\n  return req;\r\n});\r\n\r\n// ✅ Auth API (Register & Login)\r\nexport const register = async (userData) => API.post('/auth/register', userData);\r\n\r\nexport const login = async (userData) => {\r\n  try {\r\n    const response = await API.post('/auth/login', userData);\r\n\r\n    if (response.data.token ) {\r\n      localStorage.setItem(\"token\", response.data.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\r\n      console.log(\"✅ Token stored successfully!\",response.data.token);\r\n    } else {\r\n      console.error(\"⚠️ No token received from server.\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"Login error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// ✅ Goals API\r\nexport const fetchGoals = async () => API.get('/goals');\r\nexport const createGoal = async (newGoal) => API.post('/goals', newGoal);\r\nexport const updateGoal = async (id, updatedGoal) => API.put(`/goals/${id}`, updatedGoal);\r\nexport const deleteGoal = async (id) => API.delete(`/goals/${id}`);\r\n\r\n// ✅ Statements API (Ensuring token is passed manually)\r\nexport const fetchStatements = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return API.get('/statements', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n};\r\n\r\nexport const createStatement = async (newStatement) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return API.post('/statements', newStatement, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n};\r\n\r\nexport const updateStatement = async (id, updatedStatement) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return API.put(`/statements/${id}`, updatedStatement, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n};\r\n\r\nexport const deleteStatement = async (id) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  return API.delete(`/statements/${id}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}