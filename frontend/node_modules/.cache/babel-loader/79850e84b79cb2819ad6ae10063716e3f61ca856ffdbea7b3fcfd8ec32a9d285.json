{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bill Pocket Project\\\\frontend\\\\src\\\\pages\\\\statement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport \"../CSS/statement.css\";\nimport { getStatements, createStatement, updateStatement, deleteStatement } from \"../api/statementAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Statement() {\n  _s();\n  const navigate = useNavigate(); // ✅ Initialize navigation\n  const [statements, setStatements] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newStatement, setNewStatement] = useState({\n    date: \"\",\n    item: \"\",\n    cost: \"\",\n    note: \"\"\n  });\n  const [editIndex, setEditIndex] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date\");\n  const [monthlyIncome, setMonthlyIncome] = useState(localStorage.getItem(\"monthlyIncome\") || \"\");\n  const handleIncomeChange = e => {\n    setMonthlyIncome(e.target.value);\n    localStorage.setItem(\"monthlyIncome\", e.target.value); // ✅ Save income for persistence\n  };\n  useEffect(() => {\n    const fetchStatementsData = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Please login to access statements.\");\n        navigate(\"/login\");\n        return;\n      }\n      try {\n        const response = await getStatements();\n        console.log(\"🚀 API Response:\", response);\n        setStatements(response || []);\n      } catch (error) {\n        console.error(\"Error fetching statements:\", error);\n      }\n    };\n    fetchStatementsData();\n  }, [navigate]); // ✅ Fix dependencies\n\n  const totalExpense = statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0);\n  const remainingBalance = monthlyIncome ? monthlyIncome - totalExpense : 0; // ✅ Adjust dynamically\n  const suggestedSavings = monthlyIncome ? (monthlyIncome * 0.2).toFixed(2) : 0; // ✅ Suggest saving 20%\n\n  // Monthly Budget Alert\n  useEffect(() => {\n    if (!monthlyIncome || monthlyIncome <= 0) return;\n    if (totalExpense > monthlyIncome) {\n      alert(\"⚠️ You’ve exceeded your monthly income!\");\n    } else if (monthlyIncome && totalExpense > monthlyIncome * 0.9) {\n      alert(\"🔔 You’re close to spending all of your monthly income.\");\n    }\n  }, [totalExpense, monthlyIncome]);\n  const lineChartData = [...(statements || [])].map(s => ({\n    date: s.date,\n    cost: parseFloat(s.cost)\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n  const handleSubmitStatement = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"⚠️ Authentication error! Please log in again.\");\n        navigate(\"/login\");\n        return;\n      }\n      const statementToSend = {\n        ...newStatement\n      };\n      // ✅ Prevent empty fields\n      if (!statementToSend.date || !statementToSend.item || !statementToSend.cost) {\n        alert(\"⚠️ All fields are required!\");\n        return;\n      }\n      let response;\n      if (editIndex !== null) {\n        var _statements$editIndex, _statements$editIndex2;\n        const statementId = ((_statements$editIndex = statements[editIndex]) === null || _statements$editIndex === void 0 ? void 0 : _statements$editIndex._id) || ((_statements$editIndex2 = statements[editIndex]) === null || _statements$editIndex2 === void 0 ? void 0 : _statements$editIndex2.id);\n        if (!statementId) {\n          alert(\"⚠️ Error: Statement ID not found!\");\n          return;\n        }\n        response = await updateStatement(statementId, statementToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        // ✅ Properly update the edited statement in the state\n        setStatements(statements.map((s, i) => i === editIndex ? response : s));\n      } else {\n        response = await createStatement(statementToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setStatements([...statements, response]);\n      }\n      setNewStatement({\n        date: \"\",\n        item: \"\",\n        cost: \"\",\n        note: \"\"\n      });\n      setEditIndex(null);\n      setIsModalOpen(false);\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error submitting statement:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert(\"Failed to submit statement. Please try again.\");\n    }\n  };\n  const handleEditStatement = index => {\n    if (index < 0 || index >= statements.length) {\n      alert(\"⚠️ Error: Invalid statement index!\");\n      return;\n    }\n    const statementToEdit = statements[index]; // ✅ Correctly retrieve statement\n    if (!statementToEdit) {\n      alert(\"⚠️ Error: Statement not found!\");\n      return;\n    }\n    setNewStatement({\n      ...statementToEdit\n    }); // ✅ Fill the form with statement data\n    setEditIndex(index); // ✅ Set the index for editing\n    setIsModalOpen(true); // ✅ Open the modal when button is clicked\n  };\n  const handleDeleteStatement = async index => {\n    try {\n      var _statements$index, _statements$index2;\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"⚠️ Authentication error! Please log in again.\");\n        navigate(\"/login\");\n        return;\n      }\n      const statementId = ((_statements$index = statements[index]) === null || _statements$index === void 0 ? void 0 : _statements$index._id) || ((_statements$index2 = statements[index]) === null || _statements$index2 === void 0 ? void 0 : _statements$index2.id);\n      if (!statementId) {\n        alert(\"⚠️ Error: Statement ID not found!\");\n        return;\n      }\n      await deleteStatement(statementId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setStatements(statements.filter((_, i) => i !== index)); // ✅ Update UI after deletion\n    } catch (err) {\n      var _err$response2;\n      console.error(\"❌ Error deleting statement:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      alert(\"Failed to delete statement. Please try again.\");\n    }\n  };\n  const handleCloseModal = () => {\n    setNewStatement({\n      date: \"\",\n      item: \"\",\n      cost: \"\",\n      note: \"\"\n    });\n    setIsModalOpen(false);\n    setEditIndex(null);\n  };\n  const filteredStatements = [...statements].filter(s => (s.item || \"\").toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => {\n    if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\n    if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statement-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Statements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by item...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortKey,\n          onChange: e => setSortKey(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Sort by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cost\",\n            children: \"Sort by Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"income-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Monthly Income: \\u20B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: monthlyIncome,\n          onChange: handleIncomeChange,\n          placeholder: \"Enter your monthly income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: statements && statements.length > 0 ? statements.map((statement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this), \" \", statement.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 21\n            }, this), \" \", statement.item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 21\n            }, this), \" \\u20B9\", statement.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), statement.note && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 40\n            }, this), \" \", statement.note]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statement1-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditStatement(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteStatement(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, statement._id || statement.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No statements available. Try adding one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this) // ✅ Prevent blank page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expensse-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Monthly Income:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 18\n          }, this), \" \\u20B9\", monthlyIncome || \"Not Set\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Expense:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 18\n          }, this), \" \\u20B9\", totalExpense]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Remaining Balance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 18\n          }, this), \" \\u20B9\", remainingBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Suggested Savings (20%):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 18\n          }, this), \" \\u20B9\", suggestedSavings]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), lineChartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: lineChartData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"cost\",\n              stroke: \"#82ca9d\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editIndex !== null ? \"Edit Statement\" : \"Add Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newStatement.date,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            date: e.target.value\n          }),\n          placeholder: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newStatement.item,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            item: e.target.value\n          }),\n          placeholder: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newStatement.cost,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            cost: e.target.value\n          }),\n          placeholder: \"Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newStatement.note,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            note: e.target.value\n          }),\n          placeholder: \"Optional Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitStatement,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(Statement, \"Kib57iqDHn2Rmpm8VErLEzkafKU=\", false, function () {\n  return [useNavigate];\n});\n_c = Statement;\nexport default Statement;\nvar _c;\n$RefreshReg$(_c, \"Statement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","getStatements","createStatement","updateStatement","deleteStatement","jsxDEV","_jsxDEV","Statement","_s","navigate","statements","setStatements","isModalOpen","setIsModalOpen","newStatement","setNewStatement","date","item","cost","note","editIndex","setEditIndex","searchTerm","setSearchTerm","sortKey","setSortKey","monthlyIncome","setMonthlyIncome","localStorage","getItem","handleIncomeChange","e","target","value","setItem","fetchStatementsData","token","alert","response","console","log","error","totalExpense","reduce","total","s","parseFloat","remainingBalance","suggestedSavings","toFixed","lineChartData","map","sort","a","b","Date","handleSubmitStatement","preventDefault","statementToSend","_statements$editIndex","_statements$editIndex2","statementId","_id","id","headers","Authorization","i","err","_err$response","data","message","handleEditStatement","index","length","statementToEdit","handleDeleteStatement","_statements$index","_statements$index2","filter","_","_err$response2","handleCloseModal","filteredStatements","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","statement","width","height","strokeDasharray","dataKey","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["D:/Bill Pocket Project/frontend/src/pages/statement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"../CSS/statement.css\";\r\nimport {\r\n  getStatements,\r\n  createStatement,\r\n  updateStatement,\r\n  deleteStatement,\r\n} from \"../api/statementAPI\";\r\n\r\nfunction Statement() {\r\n  const navigate = useNavigate(); // ✅ Initialize navigation\r\n  const [statements, setStatements] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newStatement, setNewStatement] = useState({\r\n    date: \"\",\r\n    item: \"\",\r\n    cost: \"\",\r\n    note: \"\",\r\n  });\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const [monthlyIncome, setMonthlyIncome] = useState(localStorage.getItem(\"monthlyIncome\") || \"\");\r\n  const handleIncomeChange = (e) => {\r\n    setMonthlyIncome(e.target.value);\r\n    localStorage.setItem(\"monthlyIncome\", e.target.value); // ✅ Save income for persistence\r\n};\r\n \r\n  useEffect(() => {\r\n    const fetchStatementsData = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"Please login to access statements.\");\r\n        navigate(\"/login\");\r\n        return;\r\n  }\r\n    try {\r\n      const response = await getStatements();\r\n      console.log(\"🚀 API Response:\", response);\r\n      setStatements(response || [] );\r\n    } catch (error) {\r\n      console.error(\"Error fetching statements:\", error);\r\n    }\r\n  };\r\n\r\n   fetchStatementsData();\r\n  }, [ navigate]); // ✅ Fix dependencies\r\n\r\n  const totalExpense = statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0);\r\n  const remainingBalance = monthlyIncome ? monthlyIncome - totalExpense : 0; // ✅ Adjust dynamically\r\n  const suggestedSavings = monthlyIncome ? (monthlyIncome * 0.2).toFixed(2) : 0; // ✅ Suggest saving 20%\r\n\r\n\r\n  // Monthly Budget Alert\r\n  useEffect(() => {\r\n     if (!monthlyIncome || monthlyIncome <= 0) return;\r\n\r\n    if (totalExpense > monthlyIncome) {\r\n      alert(\"⚠️ You’ve exceeded your monthly income!\");\r\n    } else if (monthlyIncome && totalExpense > monthlyIncome * 0.9) {\r\n      alert(\"🔔 You’re close to spending all of your monthly income.\");\r\n\r\n    }\r\n  }, [totalExpense, monthlyIncome]);\r\n\r\n  const lineChartData = [...(statements || [])]\r\n    .map((s) => ({\r\n      date: s.date,\r\n      cost: parseFloat(s.cost),\r\n    }))\r\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n   const handleSubmitStatement = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"⚠️ Authentication error! Please log in again.\");\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n         const statementToSend = { ...newStatement };\r\n           // ✅ Prevent empty fields\r\n         if (!statementToSend.date || !statementToSend.item || !statementToSend.cost) {\r\n            alert(\"⚠️ All fields are required!\");\r\n            return;\r\n        }\r\n\r\n        let response;\r\n        if (editIndex !== null) {\r\n         const statementId = statements[editIndex]?._id || statements[editIndex]?.id;\r\n           if (!statementId) {\r\n                alert(\"⚠️ Error: Statement ID not found!\");\r\n                return;\r\n            }\r\n            response = await updateStatement(statementId, statementToSend, {\r\n                headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" }\r\n            });\r\n            // ✅ Properly update the edited statement in the state\r\n            setStatements(statements.map((s, i) => (i === editIndex ? response : s)));\r\n            \r\n        } else {\r\n            response = await createStatement(statementToSend, {\r\n                headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" }\r\n            });\r\n\r\n            setStatements([...statements, response]);\r\n        }\r\n\r\n        setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n        setEditIndex(null);\r\n        setIsModalOpen(false);\r\n  }  catch (err) {\r\n       console.error(\"Error submitting statement:\", err.response?.data || err.message);\r\n        alert(\"Failed to submit statement. Please try again.\");\r\n  }\r\n};\r\n\r\n const handleEditStatement = (index) => {\r\n    if (index < 0 || index >= statements.length) {\r\n        alert(\"⚠️ Error: Invalid statement index!\");\r\n        return;\r\n    }\r\n\r\n    const statementToEdit = statements[index];  // ✅ Correctly retrieve statement\r\n    if (!statementToEdit) {\r\n        alert(\"⚠️ Error: Statement not found!\");\r\n        return;\r\n    }\r\n\r\n    setNewStatement({ ...statementToEdit }); // ✅ Fill the form with statement data\r\n    setEditIndex(index); // ✅ Set the index for editing\r\n    setIsModalOpen(true); // ✅ Open the modal when button is clicked\r\n};\r\n\r\nconst handleDeleteStatement = async (index) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            alert(\"⚠️ Authentication error! Please log in again.\");\r\n            navigate(\"/login\");\r\n            return;\r\n        }\r\n\r\n        const statementId = statements[index]?._id || statements[index]?.id;\r\n        if (!statementId) {\r\n            alert(\"⚠️ Error: Statement ID not found!\");\r\n            return;\r\n        }\r\n\r\n        await deleteStatement(statementId, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        setStatements(statements.filter((_, i) => i !== index)); // ✅ Update UI after deletion\r\n    } catch (err) {\r\n        console.error(\"❌ Error deleting statement:\", err.response?.data || err.message);\r\n        alert(\"Failed to delete statement. Please try again.\");\r\n    }\r\n};\r\n\r\n  const handleCloseModal = () => {\r\n    setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n    setIsModalOpen(false);\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const filteredStatements = [...statements]\r\n    .filter((s) => (s.item || \"\").toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .sort((a, b) => {\r\n      if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\r\n      if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\r\n      return 0;\r\n    });\r\n\r\n  return (\r\n    <div className=\"statement-page\">\r\n      <div className=\"column\">\r\n        <div className=\"column-header\">\r\n          <h2>Statements</h2>\r\n          <button onClick={() => setIsModalOpen(true)}>Add</button>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by item...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select value={sortKey} onChange={(e) => setSortKey(e.target.value)}>\r\n            <option value=\"date\">Sort by Date</option>\r\n            <option value=\"cost\">Sort by Cost</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"income-input\">\r\n    <label>Monthly Income: ₹</label>\r\n    <input type=\"number\" value={monthlyIncome} onChange={handleIncomeChange} placeholder=\"Enter your monthly income\" />\r\n</div> \r\n\r\n        <ul>\r\n          {statements && statements.length > 0 ? (\r\n            statements.map((statement, index) => (          \r\n            <li key={statement._id || statement.id || index}>\r\n              <span><strong>Date:</strong> {statement.date}</span>\r\n              <span><strong>Goal:</strong> {statement.item}</span>\r\n              <span><strong>Cost:</strong> ₹{statement.cost}</span>\r\n              {statement.note && <span><strong>Note:</strong> {statement.note}</span>}\r\n              <div className=\"statement1-actions\">\r\n                <button onClick={() => handleEditStatement(index)}>Edit</button>\r\n                <button onClick={() => handleDeleteStatement(index)}>Delete</button>\r\n              </div>\r\n            </li>\r\n          ))\r\n        ) : (\r\n            <p>No statements available. Try adding one!</p> // ✅ Prevent blank page\r\n          )}\r\n        </ul>\r\n        <div className=\"expensse-slot\">\r\n           <span><strong>Monthly Income:</strong> ₹{monthlyIncome || \"Not Set\"}</span>\r\n           <span><strong>Total Expense:</strong> ₹{totalExpense}</span>\r\n           <span><strong>Remaining Balance:</strong> ₹{remainingBalance}</span>\r\n           <span><strong>Suggested Savings (20%):</strong> ₹{suggestedSavings}</span>\r\n       </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Expense Trend</h3>\r\n          {lineChartData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={lineChartData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#82ca9d\" strokeWidth={2} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <p>No data to display</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>{editIndex !== null ? \"Edit Statement\" : \"Add Statement\"}</h3>\r\n            <input\r\n              type=\"date\"\r\n              value={newStatement.date}\r\n              onChange={(e) => setNewStatement({ ...newStatement, date: e.target.value })}\r\n              placeholder=\"Date\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={newStatement.item}\r\n              onChange={(e) => setNewStatement({ ...newStatement, item: e.target.value })}\r\n              placeholder=\"Item\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={newStatement.cost}\r\n              onChange={(e) => setNewStatement({ ...newStatement, cost: e.target.value })}\r\n              placeholder=\"Cost\"\r\n            />\r\n            <textarea\r\n              value={newStatement.note}\r\n              onChange={(e) => setNewStatement({ ...newStatement, note: e.target.value })}\r\n              placeholder=\"Optional Note\"\r\n            />\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleSubmitStatement}>Submit</button>\r\n              <button onClick={handleCloseModal}>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}