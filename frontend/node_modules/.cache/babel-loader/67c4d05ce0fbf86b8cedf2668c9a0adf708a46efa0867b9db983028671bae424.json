{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api/statements\";\nexport const getStatements = async () => {\n  const token = localStorage.getItem(\"token\"); // make sure token is stored in login\n  if (!token) {\n    throw new Error(\"Token not found. Please log in again.\");\n  }\n  try {\n    const response = await axios.get(API_URL, {\n      headers: {\n        Authorization: `Bearer ${token}` // ✅ important\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching statements:\", error);\n    throw error;\n  }\n};\n\n// Example: Get Statements\nexport const fetchStatements = async () => {\n  const response = await API.get(\"/statements\");\n  return response.data;\n};\n\n// Add other CRUD functions here...\nexport const createStatement = async data => {\n  const response = await API.post(\"/statements\", data);\n  return response.data;\n};\nexport const updateStatement = async (id, data) => {\n  const response = await API.put(`/statements/${id}`, data);\n  return response.data;\n};\nexport const deleteStatement = async id => {\n  const response = await API.delete(`/statements/${id}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getStatements","token","localStorage","getItem","Error","response","get","headers","Authorization","data","error","console","fetchStatements","API","createStatement","post","updateStatement","id","put","deleteStatement","delete"],"sources":["D:/Bill Pocket Project/frontend/src/api/statementAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api/statements\";\r\n\r\nexport const getStatements = async () => {\r\n  const token = localStorage.getItem(\"token\"); // make sure token is stored in login\r\n  if (!token) {\r\n    throw new Error(\"Token not found. Please log in again.\");\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get(API_URL, {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`, // ✅ important\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching statements:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// Example: Get Statements\r\nexport const fetchStatements = async () => {\r\n  const response = await API.get(\"/statements\");\r\n  return response.data;\r\n};\r\n\r\n// Add other CRUD functions here...\r\nexport const createStatement = async (data) => {\r\n  const response = await API.post(\"/statements\", data);\r\n  return response.data;\r\n};\r\n\r\nexport const updateStatement = async (id, data) => {\r\n  const response = await API.put(`/statements/${id}`, data);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteStatement = async (id) => {\r\n  const response = await API.delete(`/statements/${id}`);\r\n  return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAI,CAACF,KAAK,EAAE;IACV,MAAM,IAAIG,KAAK,CAAC,uCAAuC,CAAC;EAC1D;EAEA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAACP,OAAO,EAAE;MACxCQ,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUP,KAAK,EAAE,CAAE;MACpC;IACF,CAAC,CAAC;IACF,OAAOI,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAGD;AACA,OAAO,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMP,QAAQ,GAAG,MAAMQ,GAAG,CAACP,GAAG,CAAC,aAAa,CAAC;EAC7C,OAAOD,QAAQ,CAACI,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMK,eAAe,GAAG,MAAOL,IAAI,IAAK;EAC7C,MAAMJ,QAAQ,GAAG,MAAMQ,GAAG,CAACE,IAAI,CAAC,aAAa,EAAEN,IAAI,CAAC;EACpD,OAAOJ,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMO,eAAe,GAAG,MAAAA,CAAOC,EAAE,EAAER,IAAI,KAAK;EACjD,MAAMJ,QAAQ,GAAG,MAAMQ,GAAG,CAACK,GAAG,CAAC,eAAeD,EAAE,EAAE,EAAER,IAAI,CAAC;EACzD,OAAOJ,QAAQ,CAACI,IAAI;AACtB,CAAC;AAED,OAAO,MAAMU,eAAe,GAAG,MAAOF,EAAE,IAAK;EAC3C,MAAMZ,QAAQ,GAAG,MAAMQ,GAAG,CAACO,MAAM,CAAC,eAAeH,EAAE,EAAE,CAAC;EACtD,OAAOZ,QAAQ,CAACI,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}