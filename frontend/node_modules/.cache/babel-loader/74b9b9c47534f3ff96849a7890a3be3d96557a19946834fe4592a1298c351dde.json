{"ast":null,"code":"import axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"http://localhost:5000/api\",\n  // Change this if needed\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Add token from localStorage if it exists\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization"],"sources":["D:/Bill Pocket Project/frontend/src/api/axiosInstance.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: \"http://localhost:5000/api\", // Change this if needed\r\n    headers: {\r\n        \"Content-Type\": \"application/json\",\r\n    },\r\n});\r\n\r\n// Add token from localStorage if it exists\r\naxiosInstance.interceptors.request.use((config) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n});\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC/BC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC/C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EACpD;EACA,OAAOD,MAAM;AACjB,CAAC,CAAC;AAEF,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}