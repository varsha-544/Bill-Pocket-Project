{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bill Pocket Project\\\\frontend\\\\src\\\\pages\\\\statement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport \"../CSS/statement.css\";\nimport { getStatements, createStatement, updateStatement, deleteStatement } from \"../api/statementAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Statement() {\n  _s();\n  const navigate = useNavigate(); // ✅ Initialize navigation\n  const [statements, setStatements] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newStatement, setNewStatement] = useState({\n    date: \"\",\n    item: \"\",\n    cost: \"\",\n    note: \"\"\n  });\n  const [editIndex, setEditIndex] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date\");\n  const [monthlyIncome, setMonthlyIncome] = useState(localStorage.getItem(\"monthlyIncome\") || \"\");\n  useEffect(() => {\n    const fetchStatementsData = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Please login to access statements.\");\n        navigate(\"/login\");\n        return;\n      }\n      try {\n        const response = await getStatements();\n        console.log(\"🚀 API Response:\", response);\n        setStatements(response || []);\n      } catch (error) {\n        console.error(\"Error fetching statements:\", error);\n      }\n    };\n    fetchStatementsData();\n  }, [navigate]); // ✅ Fix dependencies\n\n  const calculateTotalExpense = () => statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0).toFixed(2);\n  const currentMonth = new Date().getMonth();\n  const monthlyExpenses = (statements || []).filter(s => new Date(s.date).getMonth() === currentMonth).reduce((total, s) => total + parseFloat(s.cost || 0), 0);\n\n  // Monthly Budget Alert\n  useEffect(() => {\n    if (monthlyExpenses > monthlyBudget) {\n      alert(\"⚠️ You’ve exceeded your monthly budget!\");\n    } else if (monthlyExpenses > monthlyBudget * 0.9) {\n      alert(\"🔔 You’re close to your monthly budget.\");\n    }\n  }, [monthlyExpenses]);\n  const lineChartData = [...(statements || [])].map(s => ({\n    date: s.date,\n    cost: parseFloat(s.cost)\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n  const handleSubmitStatement = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"⚠️ Authentication error! Please log in again.\");\n        navigate(\"/login\");\n        return;\n      }\n      const statementToSend = {\n        ...newStatement\n      };\n      // ✅ Prevent empty fields\n      if (!statementToSend.date || !statementToSend.item || !statementToSend.cost) {\n        alert(\"⚠️ All fields are required!\");\n        return;\n      }\n      let response;\n      if (editIndex !== null) {\n        var _statements$editIndex, _statements$editIndex2;\n        const statementId = ((_statements$editIndex = statements[editIndex]) === null || _statements$editIndex === void 0 ? void 0 : _statements$editIndex._id) || ((_statements$editIndex2 = statements[editIndex]) === null || _statements$editIndex2 === void 0 ? void 0 : _statements$editIndex2.id);\n        if (!statementId) {\n          alert(\"⚠️ Error: Statement ID not found!\");\n          return;\n        }\n        response = await updateStatement(statementId, statementToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        // ✅ Properly update the edited statement in the state\n        setStatements(statements.map((s, i) => i === editIndex ? response : s));\n      } else {\n        response = await createStatement(statementToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setStatements([...statements, response]);\n      }\n      setNewStatement({\n        date: \"\",\n        item: \"\",\n        cost: \"\",\n        note: \"\"\n      });\n      setEditIndex(null);\n      setIsModalOpen(false);\n    } catch (err) {\n      var _err$response;\n      console.error(\"Error submitting statement:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert(\"Failed to submit statement. Please try again.\");\n    }\n  };\n  const handleEditStatement = index => {\n    if (index < 0 || index >= statements.length) {\n      alert(\"⚠️ Error: Invalid statement index!\");\n      return;\n    }\n    const statementToEdit = statements[index]; // ✅ Correctly retrieve statement\n    if (!statementToEdit) {\n      alert(\"⚠️ Error: Statement not found!\");\n      return;\n    }\n    setNewStatement({\n      ...statementToEdit\n    }); // ✅ Fill the form with statement data\n    setEditIndex(index); // ✅ Set the index for editing\n    setIsModalOpen(true); // ✅ Open the modal when button is clicked\n  };\n  const handleDeleteStatement = async index => {\n    try {\n      var _statements$index, _statements$index2;\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"⚠️ Authentication error! Please log in again.\");\n        navigate(\"/login\");\n        return;\n      }\n      const statementId = ((_statements$index = statements[index]) === null || _statements$index === void 0 ? void 0 : _statements$index._id) || ((_statements$index2 = statements[index]) === null || _statements$index2 === void 0 ? void 0 : _statements$index2.id);\n      if (!statementId) {\n        alert(\"⚠️ Error: Statement ID not found!\");\n        return;\n      }\n      await deleteStatement(statementId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setStatements(statements.filter((_, i) => i !== index)); // ✅ Update UI after deletion\n    } catch (err) {\n      var _err$response2;\n      console.error(\"❌ Error deleting statement:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n      alert(\"Failed to delete statement. Please try again.\");\n    }\n  };\n  const handleCloseModal = () => {\n    setNewStatement({\n      date: \"\",\n      item: \"\",\n      cost: \"\",\n      note: \"\"\n    });\n    setIsModalOpen(false);\n    setEditIndex(null);\n  };\n  const filteredStatements = [...statements].filter(s => (s.item || \"\").toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => {\n    if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\n    if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statement-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Statements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by item...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortKey,\n          onChange: e => setSortKey(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Sort by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cost\",\n            children: \"Sort by Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: statements && statements.length > 0 ? statements.map((statement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 21\n            }, this), \" \", statement.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 21\n            }, this), \" \", statement.item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 21\n            }, this), \" \\u20B9\", statement.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), statement.note && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 40\n            }, this), \" \", statement.note]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statement1-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditStatement(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteStatement(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, statement._id || statement.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No statements available. Try adding one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this) // ✅ Prevent blank page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expensse-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total Expense: \\u20B9\", calculateTotalExpense()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: monthlyExpenses > monthlyBudget ? \"red\" : \"green\"\n          },\n          children: [\"This Month: \\u20B9\", monthlyExpenses, \" / \\u20B9\", monthlyBudget]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), lineChartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: lineChartData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"cost\",\n              stroke: \"#82ca9d\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editIndex !== null ? \"Edit Statement\" : \"Add Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newStatement.date,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            date: e.target.value\n          }),\n          placeholder: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newStatement.item,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            item: e.target.value\n          }),\n          placeholder: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newStatement.cost,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            cost: e.target.value\n          }),\n          placeholder: \"Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newStatement.note,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            note: e.target.value\n          }),\n          placeholder: \"Optional Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitStatement,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s(Statement, \"Kib57iqDHn2Rmpm8VErLEzkafKU=\", false, function () {\n  return [useNavigate];\n});\n_c = Statement;\nexport default Statement;\nvar _c;\n$RefreshReg$(_c, \"Statement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","getStatements","createStatement","updateStatement","deleteStatement","jsxDEV","_jsxDEV","Statement","_s","navigate","statements","setStatements","isModalOpen","setIsModalOpen","newStatement","setNewStatement","date","item","cost","note","editIndex","setEditIndex","searchTerm","setSearchTerm","sortKey","setSortKey","monthlyIncome","setMonthlyIncome","localStorage","getItem","fetchStatementsData","token","alert","response","console","log","error","calculateTotalExpense","reduce","total","s","parseFloat","toFixed","currentMonth","Date","getMonth","monthlyExpenses","filter","monthlyBudget","lineChartData","map","sort","a","b","handleSubmitStatement","e","preventDefault","statementToSend","_statements$editIndex","_statements$editIndex2","statementId","_id","id","headers","Authorization","i","err","_err$response","data","message","handleEditStatement","index","length","statementToEdit","handleDeleteStatement","_statements$index","_statements$index2","_","_err$response2","handleCloseModal","filteredStatements","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","target","statement","style","color","width","height","strokeDasharray","dataKey","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["D:/Bill Pocket Project/frontend/src/pages/statement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"../CSS/statement.css\";\r\nimport {\r\n  getStatements,\r\n  createStatement,\r\n  updateStatement,\r\n  deleteStatement,\r\n} from \"../api/statementAPI\";\r\n\r\nfunction Statement() {\r\n  const navigate = useNavigate(); // ✅ Initialize navigation\r\n  const [statements, setStatements] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newStatement, setNewStatement] = useState({\r\n    date: \"\",\r\n    item: \"\",\r\n    cost: \"\",\r\n    note: \"\",\r\n  });\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const [monthlyIncome, setMonthlyIncome] = useState(localStorage.getItem(\"monthlyIncome\") || \"\");\r\n   \r\n  useEffect(() => {\r\n    const fetchStatementsData = async () => {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"Please login to access statements.\");\r\n        navigate(\"/login\");\r\n        return;\r\n  }\r\n    try {\r\n      const response = await getStatements();\r\n      console.log(\"🚀 API Response:\", response);\r\n      setStatements(response || [] );\r\n    } catch (error) {\r\n      console.error(\"Error fetching statements:\", error);\r\n    }\r\n  };\r\n\r\n   fetchStatementsData();\r\n  }, [ navigate]); // ✅ Fix dependencies\r\n\r\n  const calculateTotalExpense = () =>\r\n    statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0).toFixed(2);\r\n\r\n  const currentMonth = new Date().getMonth();\r\n  const monthlyExpenses = (statements || [])\r\n    .filter((s) => new Date(s.date).getMonth() === currentMonth)\r\n    .reduce((total, s) => total + parseFloat(s.cost || 0), 0);\r\n\r\n  // Monthly Budget Alert\r\n  useEffect(() => {\r\n    if (monthlyExpenses > monthlyBudget) {\r\n      alert(\"⚠️ You’ve exceeded your monthly budget!\");\r\n    } else if (monthlyExpenses > monthlyBudget * 0.9) {\r\n      alert(\"🔔 You’re close to your monthly budget.\");\r\n    }\r\n  }, [monthlyExpenses]);\r\n\r\n  const lineChartData = [...(statements || [])]\r\n    .map((s) => ({\r\n      date: s.date,\r\n      cost: parseFloat(s.cost),\r\n    }))\r\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n   const handleSubmitStatement = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem(\"token\");\r\n      if (!token) {\r\n        alert(\"⚠️ Authentication error! Please log in again.\");\r\n        navigate(\"/login\");\r\n        return;\r\n      }\r\n         const statementToSend = { ...newStatement };\r\n           // ✅ Prevent empty fields\r\n         if (!statementToSend.date || !statementToSend.item || !statementToSend.cost) {\r\n            alert(\"⚠️ All fields are required!\");\r\n            return;\r\n        }\r\n\r\n        let response;\r\n        if (editIndex !== null) {\r\n         const statementId = statements[editIndex]?._id || statements[editIndex]?.id;\r\n           if (!statementId) {\r\n                alert(\"⚠️ Error: Statement ID not found!\");\r\n                return;\r\n            }\r\n            response = await updateStatement(statementId, statementToSend, {\r\n                headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" }\r\n            });\r\n            // ✅ Properly update the edited statement in the state\r\n            setStatements(statements.map((s, i) => (i === editIndex ? response : s)));\r\n            \r\n        } else {\r\n            response = await createStatement(statementToSend, {\r\n                headers: { Authorization: `Bearer ${token}`, \"Content-Type\": \"application/json\" }\r\n            });\r\n\r\n            setStatements([...statements, response]);\r\n        }\r\n\r\n        setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n        setEditIndex(null);\r\n        setIsModalOpen(false);\r\n  }  catch (err) {\r\n       console.error(\"Error submitting statement:\", err.response?.data || err.message);\r\n        alert(\"Failed to submit statement. Please try again.\");\r\n  }\r\n};\r\n\r\n const handleEditStatement = (index) => {\r\n    if (index < 0 || index >= statements.length) {\r\n        alert(\"⚠️ Error: Invalid statement index!\");\r\n        return;\r\n    }\r\n\r\n    const statementToEdit = statements[index];  // ✅ Correctly retrieve statement\r\n    if (!statementToEdit) {\r\n        alert(\"⚠️ Error: Statement not found!\");\r\n        return;\r\n    }\r\n\r\n    setNewStatement({ ...statementToEdit }); // ✅ Fill the form with statement data\r\n    setEditIndex(index); // ✅ Set the index for editing\r\n    setIsModalOpen(true); // ✅ Open the modal when button is clicked\r\n};\r\n\r\nconst handleDeleteStatement = async (index) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            alert(\"⚠️ Authentication error! Please log in again.\");\r\n            navigate(\"/login\");\r\n            return;\r\n        }\r\n\r\n        const statementId = statements[index]?._id || statements[index]?.id;\r\n        if (!statementId) {\r\n            alert(\"⚠️ Error: Statement ID not found!\");\r\n            return;\r\n        }\r\n\r\n        await deleteStatement(statementId, {\r\n            headers: { Authorization: `Bearer ${token}` }\r\n        });\r\n\r\n        setStatements(statements.filter((_, i) => i !== index)); // ✅ Update UI after deletion\r\n    } catch (err) {\r\n        console.error(\"❌ Error deleting statement:\", err.response?.data || err.message);\r\n        alert(\"Failed to delete statement. Please try again.\");\r\n    }\r\n};\r\n\r\n  const handleCloseModal = () => {\r\n    setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n    setIsModalOpen(false);\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const filteredStatements = [...statements]\r\n    .filter((s) => (s.item || \"\").toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .sort((a, b) => {\r\n      if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\r\n      if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\r\n      return 0;\r\n    });\r\n\r\n  return (\r\n    <div className=\"statement-page\">\r\n      <div className=\"column\">\r\n        <div className=\"column-header\">\r\n          <h2>Statements</h2>\r\n          <button onClick={() => setIsModalOpen(true)}>Add</button>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by item...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select value={sortKey} onChange={(e) => setSortKey(e.target.value)}>\r\n            <option value=\"date\">Sort by Date</option>\r\n            <option value=\"cost\">Sort by Cost</option>\r\n          </select>\r\n        </div>\r\n\r\n        <ul>\r\n          {statements && statements.length > 0 ? (\r\n            statements.map((statement, index) => (          \r\n            <li key={statement._id || statement.id || index}>\r\n              <span><strong>Date:</strong> {statement.date}</span>\r\n              <span><strong>Goal:</strong> {statement.item}</span>\r\n              <span><strong>Cost:</strong> ₹{statement.cost}</span>\r\n              {statement.note && <span><strong>Note:</strong> {statement.note}</span>}\r\n              <div className=\"statement1-actions\">\r\n                <button onClick={() => handleEditStatement(index)}>Edit</button>\r\n                <button onClick={() => handleDeleteStatement(index)}>Delete</button>\r\n              </div>\r\n            </li>\r\n          ))\r\n        ) : (\r\n            <p>No statements available. Try adding one!</p> // ✅ Prevent blank page\r\n          )}\r\n        </ul>\r\n        <div className=\"expensse-slot\">\r\n          <span>Total Expense: ₹{calculateTotalExpense()}</span>\r\n          <span style={{ color: monthlyExpenses > monthlyBudget ? \"red\" : \"green\" }}>\r\n            This Month: ₹{monthlyExpenses} / ₹{monthlyBudget}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Expense Trend</h3>\r\n          {lineChartData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={lineChartData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#82ca9d\" strokeWidth={2} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <p>No data to display</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>{editIndex !== null ? \"Edit Statement\" : \"Add Statement\"}</h3>\r\n            <input\r\n              type=\"date\"\r\n              value={newStatement.date}\r\n              onChange={(e) => setNewStatement({ ...newStatement, date: e.target.value })}\r\n              placeholder=\"Date\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={newStatement.item}\r\n              onChange={(e) => setNewStatement({ ...newStatement, item: e.target.value })}\r\n              placeholder=\"Item\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={newStatement.cost}\r\n              onChange={(e) => setNewStatement({ ...newStatement, cost: e.target.value })}\r\n              placeholder=\"Cost\"\r\n            />\r\n            <textarea\r\n              value={newStatement.note}\r\n              onChange={(e) => setNewStatement({ ...newStatement, note: e.target.value })}\r\n              placeholder=\"Optional Note\"\r\n            />\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleSubmitStatement}>Submit</button>\r\n              <button onClick={handleCloseModal}>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}