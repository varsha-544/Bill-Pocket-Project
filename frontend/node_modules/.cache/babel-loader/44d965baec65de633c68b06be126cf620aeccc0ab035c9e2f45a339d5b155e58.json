{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bill Pocket Project\\\\frontend\\\\src\\\\pages\\\\statement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport \"../CSS/statement.css\";\nimport { getStatements, createStatement, updateStatement, deleteStatement } from \"../api/statementAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Statement() {\n  _s();\n  const [statements, setStatements] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newStatement, setNewStatement] = useState({\n    date: \"\",\n    item: \"\",\n    cost: \"\",\n    note: \"\"\n  });\n  const [editIndex, setEditIndex] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date\");\n  const monthlyBudget = 10000;\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      alert(\"Please login to access statements.\");\n      // Optionally redirect to login\n      // navigate('/login');\n      return;\n    }\n    const getStatements = async () => {\n      try {\n        const response = await fetchStatements();\n        setStatements(response);\n      } catch (error) {\n        console.error(\"Error fetching statements:\", error);\n      }\n    };\n    getStatements();\n  }, []);\n  const calculateTotalExpense = () => statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0).toFixed(2);\n  const currentMonth = new Date().getMonth();\n  const monthlyExpenses = statements.filter(s => new Date(s.date).getMonth() === currentMonth).reduce((total, s) => total + parseFloat(s.cost || 0), 0);\n\n  // Monthly Budget Alert\n  useEffect(() => {\n    if (monthlyExpenses > monthlyBudget) {\n      alert(\"⚠️ You’ve exceeded your monthly budget!\");\n    } else if (monthlyExpenses > monthlyBudget * 0.9) {\n      alert(\"🔔 You’re close to your monthly budget.\");\n    }\n  }, [monthlyExpenses]);\n  const lineChartData = [...statements].map(s => ({\n    date: s.date,\n    cost: parseFloat(s.cost)\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n  const handleSubmitStatement = async e => {\n    e.preventDefault();\n    try {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const statementToSend = {\n        ...newStatement,\n        userId: user === null || user === void 0 ? void 0 : user.id\n      };\n      if (editIndex !== null) {\n        const statementId = statements[editIndex]._id || statements[editIndex].id;\n        const updatedStatement = await updateStatement(statementId, statementToSend);\n        const updatedStatements = [...statements];\n        updatedStatements[editIndex] = updatedStatement;\n        setStatements(updatedStatements);\n      } else {\n        const createdStatement = await createStatement(statementToSend);\n        setStatements([...statements, createdStatement]);\n      }\n      setNewStatement({\n        date: \"\",\n        item: \"\",\n        cost: \"\",\n        note: \"\"\n      });\n      setEditIndex(null);\n      setIsModalOpen(false);\n    } catch (err) {\n      console.error(\"Error submitting statement:\", err);\n      alert(\"Failed to submit statement. Please try again.\");\n    }\n  };\n  const handleEditStatement = index => {\n    setNewStatement(statements[index]);\n    setEditIndex(index);\n    setIsModalOpen(true);\n  };\n  const handleDeleteStatement = async index => {\n    try {\n      const statementId = statements[index]._id || statements[index].id;\n      await deleteStatement(statementId);\n      setStatements(statements.filter((_, i) => i !== index));\n    } catch (err) {\n      console.error(\"Error deleting statement:\", err);\n      alert(\"Failed to delete statement. Please try again.\");\n    }\n  };\n  const handleCloseModal = () => {\n    setNewStatement({\n      date: \"\",\n      item: \"\",\n      cost: \"\",\n      note: \"\"\n    });\n    setIsModalOpen(false);\n    setEditIndex(null);\n  };\n  const filteredStatements = [...statements].filter(s => (s.item || \"\").toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => {\n    if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\n    if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statement-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Statements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by item...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortKey,\n          onChange: e => setSortKey(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Sort by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cost\",\n            children: \"Sort by Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredStatements.map((statement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 21\n            }, this), \" \", statement.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }, this), \" \", statement.item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this), \" \\u20B9\", statement.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), statement.note && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 40\n            }, this), \" \", statement.note]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statement1-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditStatement(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteStatement(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, statement._id || statement.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expensse-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total Expense: \\u20B9\", calculateTotalExpense()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: monthlyExpenses > monthlyBudget ? \"red\" : \"green\"\n          },\n          children: [\"This Month: \\u20B9\", monthlyExpenses, \" / \\u20B9\", monthlyBudget]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), lineChartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: lineChartData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"cost\",\n              stroke: \"#82ca9d\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editIndex !== null ? \"Edit Statement\" : \"Add Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newStatement.date,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            date: e.target.value\n          }),\n          placeholder: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newStatement.item,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            item: e.target.value\n          }),\n          placeholder: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newStatement.cost,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            cost: e.target.value\n          }),\n          placeholder: \"Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newStatement.note,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            note: e.target.value\n          }),\n          placeholder: \"Optional Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitStatement,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(Statement, \"aHKUb5ipi/oLet98eXTCKR1HtYE=\");\n_c = Statement;\nexport default Statement;\nvar _c;\n$RefreshReg$(_c, \"Statement\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","getStatements","createStatement","updateStatement","deleteStatement","jsxDEV","_jsxDEV","Statement","_s","statements","setStatements","isModalOpen","setIsModalOpen","newStatement","setNewStatement","date","item","cost","note","editIndex","setEditIndex","searchTerm","setSearchTerm","sortKey","setSortKey","monthlyBudget","token","localStorage","getItem","alert","response","fetchStatements","error","console","calculateTotalExpense","reduce","total","s","parseFloat","toFixed","currentMonth","Date","getMonth","monthlyExpenses","filter","lineChartData","map","sort","a","b","handleSubmitStatement","e","preventDefault","user","JSON","parse","statementToSend","userId","id","statementId","_id","updatedStatement","updatedStatements","createdStatement","err","handleEditStatement","index","handleDeleteStatement","_","i","handleCloseModal","filteredStatements","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","target","statement","style","color","length","width","height","data","strokeDasharray","dataKey","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["D:/Bill Pocket Project/frontend/src/pages/statement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"../CSS/statement.css\";\r\nimport {\r\n  getStatements,\r\n  createStatement,\r\n  updateStatement,\r\n  deleteStatement,\r\n} from \"../api/statementAPI\";\r\n\r\nfunction Statement() {\r\n  const [statements, setStatements] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newStatement, setNewStatement] = useState({\r\n    date: \"\",\r\n    item: \"\",\r\n    cost: \"\",\r\n    note: \"\",\r\n  });\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const monthlyBudget = 10000;\r\n   \r\n  useEffect(() => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    alert(\"Please login to access statements.\");\r\n    // Optionally redirect to login\r\n    // navigate('/login');\r\n    return;\r\n  }\r\n\r\n  const getStatements = async () => {\r\n    try {\r\n      const response = await fetchStatements();\r\n      setStatements(response);\r\n    } catch (error) {\r\n      console.error(\"Error fetching statements:\", error);\r\n    }\r\n  };\r\n  getStatements();\r\n}, []);\r\n\r\n\r\n  const calculateTotalExpense = () =>\r\n    statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0).toFixed(2);\r\n\r\n  const currentMonth = new Date().getMonth();\r\n  const monthlyExpenses = statements\r\n    .filter((s) => new Date(s.date).getMonth() === currentMonth)\r\n    .reduce((total, s) => total + parseFloat(s.cost || 0), 0);\r\n\r\n  // Monthly Budget Alert\r\n  useEffect(() => {\r\n    if (monthlyExpenses > monthlyBudget) {\r\n      alert(\"⚠️ You’ve exceeded your monthly budget!\");\r\n    } else if (monthlyExpenses > monthlyBudget * 0.9) {\r\n      alert(\"🔔 You’re close to your monthly budget.\");\r\n    }\r\n  }, [monthlyExpenses]);\r\n\r\n  const lineChartData = [...statements]\r\n    .map((s) => ({\r\n      date: s.date,\r\n      cost: parseFloat(s.cost),\r\n    }))\r\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n   const handleSubmitStatement = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    const statementToSend = { ...newStatement, userId: user?.id };\r\n\r\n    if (editIndex !== null) {\r\n      const statementId = statements[editIndex]._id || statements[editIndex].id;\r\n      const updatedStatement = await updateStatement(statementId, statementToSend);\r\n      const updatedStatements = [...statements];\r\n      updatedStatements[editIndex] = updatedStatement;\r\n      setStatements(updatedStatements);\r\n    } else {\r\n      const createdStatement = await createStatement(statementToSend);\r\n      setStatements([...statements, createdStatement]);\r\n    } \r\n\r\n    setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n    setEditIndex(null);\r\n    setIsModalOpen(false);\r\n  } catch (err) {\r\n    console.error(\"Error submitting statement:\", err);\r\n    alert(\"Failed to submit statement. Please try again.\");\r\n  }\r\n};\r\n\r\n  const handleEditStatement = (index) => {\r\n    setNewStatement(statements[index]);\r\n    setEditIndex(index);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteStatement = async (index) => {\r\n    try {\r\n      const statementId = statements[index]._id || statements[index].id;\r\n      await deleteStatement(statementId);\r\n      setStatements(statements.filter((_, i) => i !== index));\r\n    } catch (err) {\r\n      console.error(\"Error deleting statement:\", err);\r\n       alert(\"Failed to delete statement. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n    setIsModalOpen(false);\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const filteredStatements = [...statements]\r\n    .filter((s) => (s.item || \"\").toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .sort((a, b) => {\r\n      if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\r\n      if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\r\n      return 0;\r\n    });\r\n\r\n  return (\r\n    <div className=\"statement-page\">\r\n      <div className=\"column\">\r\n        <div className=\"column-header\">\r\n          <h2>Statements</h2>\r\n          <button onClick={() => setIsModalOpen(true)}>Add</button>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by item...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select value={sortKey} onChange={(e) => setSortKey(e.target.value)}>\r\n            <option value=\"date\">Sort by Date</option>\r\n            <option value=\"cost\">Sort by Cost</option>\r\n          </select>\r\n        </div>\r\n\r\n        <ul>\r\n          {filteredStatements.map((statement, index) => (\r\n            <li key={statement._id || statement.id || index}>\r\n              <span><strong>Date:</strong> {statement.date}</span>\r\n              <span><strong>Goal:</strong> {statement.item}</span>\r\n              <span><strong>Cost:</strong> ₹{statement.cost}</span>\r\n              {statement.note && <span><strong>Note:</strong> {statement.note}</span>}\r\n              <div className=\"statement1-actions\">\r\n                <button onClick={() => handleEditStatement(index)}>Edit</button>\r\n                <button onClick={() => handleDeleteStatement(index)}>Delete</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"expensse-slot\">\r\n          <span>Total Expense: ₹{calculateTotalExpense()}</span>\r\n          <span style={{ color: monthlyExpenses > monthlyBudget ? \"red\" : \"green\" }}>\r\n            This Month: ₹{monthlyExpenses} / ₹{monthlyBudget}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Expense Trend</h3>\r\n          {lineChartData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={lineChartData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#82ca9d\" strokeWidth={2} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <p>No data to display</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>{editIndex !== null ? \"Edit Statement\" : \"Add Statement\"}</h3>\r\n            <input\r\n              type=\"date\"\r\n              value={newStatement.date}\r\n              onChange={(e) => setNewStatement({ ...newStatement, date: e.target.value })}\r\n              placeholder=\"Date\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={newStatement.item}\r\n              onChange={(e) => setNewStatement({ ...newStatement, item: e.target.value })}\r\n              placeholder=\"Item\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={newStatement.cost}\r\n              onChange={(e) => setNewStatement({ ...newStatement, cost: e.target.value })}\r\n              placeholder=\"Cost\"\r\n            />\r\n            <textarea\r\n              value={newStatement.note}\r\n              onChange={(e) => setNewStatement({ ...newStatement, note: e.target.value })}\r\n              placeholder=\"Optional Note\"\r\n            />\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleSubmitStatement}>Submit</button>\r\n              <button onClick={handleCloseModal}>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statement;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,SACEC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,aAAa,EACbC,mBAAmB,QACd,UAAU;AACjB,OAAO,sBAAsB;AAC7B,SACEC,aAAa,EACbC,eAAe,EACfC,eAAe,EACfC,eAAe,QACV,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC;IAC/CuB,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC+B,OAAO,EAAEC,UAAU,CAAC,GAAGhC,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAMiC,aAAa,GAAG,KAAK;EAE3BhC,SAAS,CAAC,MAAM;IAChB,MAAMiC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVG,KAAK,CAAC,oCAAoC,CAAC;MAC3C;MACA;MACA;IACF;IAEA,MAAM5B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAM6B,QAAQ,GAAG,MAAMC,eAAe,CAAC,CAAC;QACxCrB,aAAa,CAACoB,QAAQ,CAAC;MACzB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACD/B,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAMiC,qBAAqB,GAAGA,CAAA,KAC5BzB,UAAU,CAAC0B,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAKD,KAAK,GAAGE,UAAU,CAACD,CAAC,CAACpB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC,CAAC;EAEhF,MAAMC,YAAY,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EAC1C,MAAMC,eAAe,GAAGlC,UAAU,CAC/BmC,MAAM,CAAEP,CAAC,IAAK,IAAII,IAAI,CAACJ,CAAC,CAACtB,IAAI,CAAC,CAAC2B,QAAQ,CAAC,CAAC,KAAKF,YAAY,CAAC,CAC3DL,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAKD,KAAK,GAAGE,UAAU,CAACD,CAAC,CAACpB,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE3D;EACAxB,SAAS,CAAC,MAAM;IACd,IAAIkD,eAAe,GAAGlB,aAAa,EAAE;MACnCI,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,MAAM,IAAIc,eAAe,GAAGlB,aAAa,GAAG,GAAG,EAAE;MAChDI,KAAK,CAAC,yCAAyC,CAAC;IAClD;EACF,CAAC,EAAE,CAACc,eAAe,CAAC,CAAC;EAErB,MAAME,aAAa,GAAG,CAAC,GAAGpC,UAAU,CAAC,CAClCqC,GAAG,CAAET,CAAC,KAAM;IACXtB,IAAI,EAAEsB,CAAC,CAACtB,IAAI;IACZE,IAAI,EAAEqB,UAAU,CAACD,CAAC,CAACpB,IAAI;EACzB,CAAC,CAAC,CAAC,CACF8B,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIR,IAAI,CAACO,CAAC,CAACjC,IAAI,CAAC,GAAG,IAAI0B,IAAI,CAACQ,CAAC,CAAClC,IAAI,CAAC,CAAC;EAErD,MAAMmC,qBAAqB,GAAG,MAAOC,CAAC,IAAK;IAC1CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACJ,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC5B,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;MACrD,MAAM4B,eAAe,GAAG;QAAE,GAAG3C,YAAY;QAAE4C,MAAM,EAAEJ,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK;MAAG,CAAC;MAE7D,IAAIvC,SAAS,KAAK,IAAI,EAAE;QACtB,MAAMwC,WAAW,GAAGlD,UAAU,CAACU,SAAS,CAAC,CAACyC,GAAG,IAAInD,UAAU,CAACU,SAAS,CAAC,CAACuC,EAAE;QACzE,MAAMG,gBAAgB,GAAG,MAAM1D,eAAe,CAACwD,WAAW,EAAEH,eAAe,CAAC;QAC5E,MAAMM,iBAAiB,GAAG,CAAC,GAAGrD,UAAU,CAAC;QACzCqD,iBAAiB,CAAC3C,SAAS,CAAC,GAAG0C,gBAAgB;QAC/CnD,aAAa,CAACoD,iBAAiB,CAAC;MAClC,CAAC,MAAM;QACL,MAAMC,gBAAgB,GAAG,MAAM7D,eAAe,CAACsD,eAAe,CAAC;QAC/D9C,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEsD,gBAAgB,CAAC,CAAC;MAClD;MAEAjD,eAAe,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,CAAC;MAC3DE,YAAY,CAAC,IAAI,CAAC;MAClBR,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOoD,GAAG,EAAE;MACZ/B,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEgC,GAAG,CAAC;MACjDnC,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAEC,MAAMoC,mBAAmB,GAAIC,KAAK,IAAK;IACrCpD,eAAe,CAACL,UAAU,CAACyD,KAAK,CAAC,CAAC;IAClC9C,YAAY,CAAC8C,KAAK,CAAC;IACnBtD,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMuD,qBAAqB,GAAG,MAAOD,KAAK,IAAK;IAC7C,IAAI;MACF,MAAMP,WAAW,GAAGlD,UAAU,CAACyD,KAAK,CAAC,CAACN,GAAG,IAAInD,UAAU,CAACyD,KAAK,CAAC,CAACR,EAAE;MACjE,MAAMtD,eAAe,CAACuD,WAAW,CAAC;MAClCjD,aAAa,CAACD,UAAU,CAACmC,MAAM,CAAC,CAACwB,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;IACzD,CAAC,CAAC,OAAOF,GAAG,EAAE;MACZ/B,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEgC,GAAG,CAAC;MAC9CnC,KAAK,CAAC,+CAA+C,CAAC;IACzD;EACF,CAAC;EAED,MAAMyC,gBAAgB,GAAGA,CAAA,KAAM;IAC7BxD,eAAe,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IAC3DN,cAAc,CAAC,KAAK,CAAC;IACrBQ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMmD,kBAAkB,GAAG,CAAC,GAAG9D,UAAU,CAAC,CACvCmC,MAAM,CAAEP,CAAC,IAAK,CAACA,CAAC,CAACrB,IAAI,IAAI,EAAE,EAAEwD,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpD,UAAU,CAACmD,WAAW,CAAC,CAAC,CAAC,CAAC,CAC9EzB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,IAAI1B,OAAO,KAAK,MAAM,EAAE,OAAOe,UAAU,CAACW,CAAC,CAAChC,IAAI,CAAC,GAAGqB,UAAU,CAACU,CAAC,CAAC/B,IAAI,CAAC;IACtE,IAAIM,OAAO,KAAK,MAAM,EAAE,OAAO,IAAIkB,IAAI,CAACQ,CAAC,CAAClC,IAAI,CAAC,GAAG,IAAI0B,IAAI,CAACO,CAAC,CAACjC,IAAI,CAAC;IAClE,OAAO,CAAC;EACV,CAAC,CAAC;EAEJ,oBACET,OAAA;IAAKoE,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BrE,OAAA;MAAKoE,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBrE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrE,OAAA;UAAAqE,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBzE,OAAA;UAAQ0E,OAAO,EAAEA,CAAA,KAAMpE,cAAc,CAAC,IAAI,CAAE;UAAA+D,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eAENzE,OAAA;QAAKoE,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACvBrE,OAAA;UACE2E,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,mBAAmB;UAC/BC,KAAK,EAAE9D,UAAW;UAClB+D,QAAQ,EAAGjC,CAAC,IAAK7B,aAAa,CAAC6B,CAAC,CAACkC,MAAM,CAACF,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFzE,OAAA;UAAQ6E,KAAK,EAAE5D,OAAQ;UAAC6D,QAAQ,EAAGjC,CAAC,IAAK3B,UAAU,CAAC2B,CAAC,CAACkC,MAAM,CAACF,KAAK,CAAE;UAAAR,QAAA,gBAClErE,OAAA;YAAQ6E,KAAK,EAAC,MAAM;YAAAR,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAC1CzE,OAAA;YAAQ6E,KAAK,EAAC,MAAM;YAAAR,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENzE,OAAA;QAAAqE,QAAA,EACGJ,kBAAkB,CAACzB,GAAG,CAAC,CAACwC,SAAS,EAAEpB,KAAK,kBACvC5D,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YAAAqE,QAAA,gBAAMrE,OAAA;cAAAqE,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACO,SAAS,CAACvE,IAAI;UAAA;YAAA6D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDzE,OAAA;YAAAqE,QAAA,gBAAMrE,OAAA;cAAAqE,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACO,SAAS,CAACtE,IAAI;UAAA;YAAA4D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDzE,OAAA;YAAAqE,QAAA,gBAAMrE,OAAA;cAAAqE,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,WAAE,EAACO,SAAS,CAACrE,IAAI;UAAA;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACpDO,SAAS,CAACpE,IAAI,iBAAIZ,OAAA;YAAAqE,QAAA,gBAAMrE,OAAA;cAAAqE,QAAA,EAAQ;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACO,SAAS,CAACpE,IAAI;UAAA;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACvEzE,OAAA;YAAKoE,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjCrE,OAAA;cAAQ0E,OAAO,EAAEA,CAAA,KAAMf,mBAAmB,CAACC,KAAK,CAAE;cAAAS,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChEzE,OAAA;cAAQ0E,OAAO,EAAEA,CAAA,KAAMb,qBAAqB,CAACD,KAAK,CAAE;cAAAS,QAAA,EAAC;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjE,CAAC;QAAA,GARCO,SAAS,CAAC1B,GAAG,IAAI0B,SAAS,CAAC5B,EAAE,IAAIQ,KAAK;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAS3C,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAELzE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrE,OAAA;UAAAqE,QAAA,GAAM,uBAAgB,EAACzC,qBAAqB,CAAC,CAAC;QAAA;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtDzE,OAAA;UAAMiF,KAAK,EAAE;YAAEC,KAAK,EAAE7C,eAAe,GAAGlB,aAAa,GAAG,KAAK,GAAG;UAAQ,CAAE;UAAAkD,QAAA,GAAC,oBAC5D,EAAChC,eAAe,EAAC,WAAI,EAAClB,aAAa;QAAA;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAENzE,OAAA;QAAKoE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BrE,OAAA;UAAAqE,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrBlC,aAAa,CAAC4C,MAAM,GAAG,CAAC,gBACvBnF,OAAA,CAACN,mBAAmB;UAAC0F,KAAK,EAAC,MAAM;UAACC,MAAM,EAAE,GAAI;UAAAhB,QAAA,eAC5CrE,OAAA,CAACZ,SAAS;YAACkG,IAAI,EAAE/C,aAAc;YAAA8B,QAAA,gBAC7BrE,OAAA,CAACP,aAAa;cAAC8F,eAAe,EAAC;YAAK;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACvCzE,OAAA,CAACV,KAAK;cAACkG,OAAO,EAAC;YAAM;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACxBzE,OAAA,CAACT,KAAK;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACTzE,OAAA,CAACR,OAAO;cAAA8E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACXzE,OAAA,CAACX,IAAI;cAACsF,IAAI,EAAC,UAAU;cAACa,OAAO,EAAC,MAAM;cAACC,MAAM,EAAC,SAAS;cAACC,WAAW,EAAE;YAAE;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/D;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO,CAAC,gBAEtBzE,OAAA;UAAAqE,QAAA,EAAG;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACzB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELpE,WAAW,iBACVL,OAAA;MAAKoE,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBrE,OAAA;QAAKoE,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BrE,OAAA;UAAAqE,QAAA,EAAKxD,SAAS,KAAK,IAAI,GAAG,gBAAgB,GAAG;QAAe;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClEzE,OAAA;UACE2E,IAAI,EAAC,MAAM;UACXE,KAAK,EAAEtE,YAAY,CAACE,IAAK;UACzBqE,QAAQ,EAAGjC,CAAC,IAAKrC,eAAe,CAAC;YAAE,GAAGD,YAAY;YAAEE,IAAI,EAAEoC,CAAC,CAACkC,MAAM,CAACF;UAAM,CAAC,CAAE;UAC5ED,WAAW,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFzE,OAAA;UACE2E,IAAI,EAAC,MAAM;UACXE,KAAK,EAAEtE,YAAY,CAACG,IAAK;UACzBoE,QAAQ,EAAGjC,CAAC,IAAKrC,eAAe,CAAC;YAAE,GAAGD,YAAY;YAAEG,IAAI,EAAEmC,CAAC,CAACkC,MAAM,CAACF;UAAM,CAAC,CAAE;UAC5ED,WAAW,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFzE,OAAA;UACE2E,IAAI,EAAC,QAAQ;UACbE,KAAK,EAAEtE,YAAY,CAACI,IAAK;UACzBmE,QAAQ,EAAGjC,CAAC,IAAKrC,eAAe,CAAC;YAAE,GAAGD,YAAY;YAAEI,IAAI,EAAEkC,CAAC,CAACkC,MAAM,CAACF;UAAM,CAAC,CAAE;UAC5ED,WAAW,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACFzE,OAAA;UACE6E,KAAK,EAAEtE,YAAY,CAACK,IAAK;UACzBkE,QAAQ,EAAGjC,CAAC,IAAKrC,eAAe,CAAC;YAAE,GAAGD,YAAY;YAAEK,IAAI,EAAEiC,CAAC,CAACkC,MAAM,CAACF;UAAM,CAAC,CAAE;UAC5ED,WAAW,EAAC;QAAe;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFzE,OAAA;UAAKoE,SAAS,EAAC,eAAe;UAAAC,QAAA,gBAC5BrE,OAAA;YAAQ0E,OAAO,EAAE9B,qBAAsB;YAAAyB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvDzE,OAAA;YAAQ0E,OAAO,EAAEV,gBAAiB;YAAAK,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvE,EAAA,CArNQD,SAAS;AAAA0F,EAAA,GAAT1F,SAAS;AAuNlB,eAAeA,SAAS;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}