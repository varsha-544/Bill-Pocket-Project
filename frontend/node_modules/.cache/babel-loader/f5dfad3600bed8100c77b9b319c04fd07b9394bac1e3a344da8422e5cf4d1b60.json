{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bill Pocket Project\\\\frontend\\\\src\\\\pages\\\\statement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../CSS/statement.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StatementPage = () => {\n  _s();\n  const [statements, setStatements] = useState([]);\n  const [filteredStatements, setFilteredStatements] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  useEffect(() => {\n    fetchStatements();\n  }, []);\n  const fetchStatements = async () => {\n    try {\n      const response = await fetch(\"/api/statements\");\n      const data = await response.json();\n      setStatements(data);\n      setFilteredStatements(data);\n      checkBudgetAlerts(data);\n    } catch (error) {\n      console.error(\"Error fetching statements:\", error);\n    }\n  };\n  const checkBudgetAlerts = data => {\n    const totalExpense = data.reduce((sum, s) => sum + parseFloat(s.cost || 0), 0);\n    const budgetLimit = 50000; // Example monthly limit\n    if (totalExpense > budgetLimit) {\n      setAlertMessage(`⚠ Warning: You've exceeded your monthly budget of ₹${budgetLimit}.`);\n    }\n  };\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n    filterStatements(event.target.value, selectedCategory);\n  };\n  const handleCategoryFilter = event => {\n    setSelectedCategory(event.target.value);\n    filterStatements(searchQuery, event.target.value);\n  };\n  const filterStatements = (query, category) => {\n    let filteredData = statements;\n    if (category !== \"All\") {\n      filteredData = filteredData.filter(statement => statement.category === category);\n    }\n    if (query) {\n      filteredData = filteredData.filter(statement => statement.item.toLowerCase().includes(query.toLowerCase()) || statement.date.includes(query));\n    }\n    setFilteredStatements(filteredData);\n  };\n  const exportToCSV = () => {\n    const csvContent = filteredStatements.map(s => `${s.date},${s.item},${s.category},₹${s.cost}`).join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"statements.csv\";\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statement-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Expense Statements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), alertMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alert\",\n      children: alertMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search statements...\",\n        value: searchQuery,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleCategoryFilter,\n        value: selectedCategory,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"All\",\n          children: \"All Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Food\",\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Shopping\",\n          children: \"Shopping\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Travel\",\n          children: \"Travel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Bills\",\n          children: \"Bills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: exportToCSV,\n        children: \"Export CSV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"statement-list\",\n      children: filteredStatements.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this) : filteredStatements.map((statement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [statement.date, \" \\u2013 \", statement.item, \" \\u2013 \", statement.category, \" \\u2013 \\u20B9\", statement.cost]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(StatementPage, \"wFEl3wDlYGdamt4YDUiXqghD05w=\");\n_c = StatementPage;\nexport default Statement;\nvar _c;\n$RefreshReg$(_c, \"StatementPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StatementPage","_s","statements","setStatements","filteredStatements","setFilteredStatements","searchQuery","setSearchQuery","selectedCategory","setSelectedCategory","alertMessage","setAlertMessage","fetchStatements","response","fetch","data","json","checkBudgetAlerts","error","console","totalExpense","reduce","sum","s","parseFloat","cost","budgetLimit","handleSearch","event","target","value","filterStatements","handleCategoryFilter","query","category","filteredData","filter","statement","item","toLowerCase","includes","date","exportToCSV","csvContent","map","join","blob","Blob","type","link","document","createElement","href","URL","createObjectURL","download","click","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","length","index","_c","Statement","$RefreshReg$"],"sources":["D:/Bill Pocket Project/frontend/src/pages/statement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../CSS/statement.css\";\r\n\r\nconst StatementPage = () => {\r\n    const [statements, setStatements] = useState([]);\r\n    const [filteredStatements, setFilteredStatements] = useState([]);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n    const [alertMessage, setAlertMessage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetchStatements();\r\n    }, []);\r\n\r\n    const fetchStatements = async () => {\r\n        try {\r\n            const response = await fetch(\"/api/statements\");\r\n            const data = await response.json();\r\n            setStatements(data);\r\n            setFilteredStatements(data);\r\n            checkBudgetAlerts(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching statements:\", error);\r\n        }\r\n    };\r\n\r\n    const checkBudgetAlerts = (data) => {\r\n        const totalExpense = data.reduce((sum, s) => sum + parseFloat(s.cost || 0), 0);\r\n        const budgetLimit = 50000; // Example monthly limit\r\n        if (totalExpense > budgetLimit) {\r\n            setAlertMessage(`⚠ Warning: You've exceeded your monthly budget of ₹${budgetLimit}.`);\r\n        }\r\n    };\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchQuery(event.target.value);\r\n        filterStatements(event.target.value, selectedCategory);\r\n    };\r\n\r\n    const handleCategoryFilter = (event) => {\r\n        setSelectedCategory(event.target.value);\r\n        filterStatements(searchQuery, event.target.value);\r\n    };\r\n\r\n    const filterStatements = (query, category) => {\r\n        let filteredData = statements;\r\n\r\n        if (category !== \"All\") {\r\n            filteredData = filteredData.filter(statement => statement.category === category);\r\n        }\r\n\r\n        if (query) {\r\n            filteredData = filteredData.filter(statement =>\r\n                statement.item.toLowerCase().includes(query.toLowerCase()) ||\r\n                statement.date.includes(query)\r\n            );\r\n        }\r\n\r\n        setFilteredStatements(filteredData);\r\n    };\r\n\r\n    const exportToCSV = () => {\r\n        const csvContent = filteredStatements.map(s => `${s.date},${s.item},${s.category},₹${s.cost}`).join(\"\\n\");\r\n        const blob = new Blob([csvContent], { type: \"text/csv\" });\r\n        const link = document.createElement(\"a\");\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = \"statements.csv\";\r\n        link.click();\r\n    };\r\n\r\n    return (\r\n        <div className=\"statement-page\">\r\n            <h1>Expense Statements</h1>\r\n            {alertMessage && <p className=\"alert\">{alertMessage}</p>}\r\n            \r\n            <div className=\"filters\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search statements...\"\r\n                    value={searchQuery}\r\n                    onChange={handleSearch}\r\n                />\r\n                <select onChange={handleCategoryFilter} value={selectedCategory}>\r\n                    <option value=\"All\">All Categories</option>\r\n                    <option value=\"Food\">Food</option>\r\n                    <option value=\"Shopping\">Shopping</option>\r\n                    <option value=\"Travel\">Travel</option>\r\n                    <option value=\"Bills\">Bills</option>\r\n                </select>\r\n                <button onClick={exportToCSV}>Export CSV</button>\r\n            </div>\r\n\r\n            <ul className=\"statement-list\">\r\n                {filteredStatements.length === 0 ? (\r\n                    <p>No transactions found.</p>\r\n                ) : (\r\n                    filteredStatements.map((statement, index) => (\r\n                        <li key={index}>\r\n                            <span>{statement.date} – {statement.item} – {statement.category} – ₹{statement.cost}</span>\r\n                        </li>\r\n                    ))\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Statement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}