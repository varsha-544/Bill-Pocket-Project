{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bill Pocket Project\\\\frontend\\\\src\\\\pages\\\\statement.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport \"../CSS/statement.css\";\nimport { fetchStatements, createStatement, updateStatement, deleteStatement } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Statement() {\n  _s();\n  const [statements, setStatements] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newStatement, setNewStatement] = useState({\n    date: \"\",\n    item: \"\",\n    cost: \"\",\n    note: \"\"\n  });\n  const [editIndex, setEditIndex] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [sortKey, setSortKey] = useState(\"date\");\n  const monthlyBudget = 10000; // Set your monthly budget limit\n\n  // Fetch statements on mount\n  useEffect(() => {\n    const getStatements = async () => {\n      try {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n        const token = localStorage.getItem(\"token\");\n        if (!user || !user.id || !token) {\n          console.warn(\"⚠️ User or token is missing!\");\n          return;\n        }\n        const res = await fetchStatements({\n          headers: {\n            Authorization: `Bearer ${token}`\n          } // Fix template literal here\n        });\n        setStatements(res.data);\n      } catch (err) {\n        var _err$response;\n        console.error(\"Error fetching statements:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      }\n    };\n    getStatements();\n  }, []);\n  const calculateTotalExpense = () => statements.reduce((total, s) => total + parseFloat(s.cost || 0), 0).toFixed(2);\n  const currentMonth = new Date().getMonth();\n  const monthlyExpenses = statements.filter(s => new Date(s.date).getMonth() === currentMonth).reduce((total, s) => total + parseFloat(s.cost || 0), 0);\n\n  // 🔔 Monthly Budget Alert\n  useEffect(() => {\n    if (monthlyExpenses > monthlyBudget) {\n      alert(\"⚠️ You’ve exceeded your monthly budget!\");\n    } else if (monthlyExpenses > monthlyBudget * 0.9) {\n      alert(\"🔔 You’re close to your monthly budget.\");\n    }\n  }, [monthlyExpenses]);\n  const lineChartData = [...statements].map(s => ({\n    date: s.date,\n    cost: parseFloat(s.cost)\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Handles both add and update\n  const handleSubmitStatement = async () => {\n    try {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const token = localStorage.getItem(\"token\");\n      if (!user || !user.id || !token) {\n        alert(\"User not found or not authenticated.\");\n        return;\n      }\n      const statementToSend = {\n        ...newStatement,\n        userId: user.id\n      };\n      if (editIndex !== null) {\n        // Update existing statement\n        const statementId = statements[editIndex]._id || statements[editIndex].id;\n        const res = await updateStatement(statementId, statementToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const updatedStatements = [...statements];\n        updatedStatements[editIndex] = res.data;\n        setStatements(updatedStatements);\n      } else {\n        // Create new statement\n        const res = await createStatement(statementToSend, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setStatements([...statements, res.data]);\n      }\n\n      // Clear form and close modal\n      setNewStatement({\n        date: \"\",\n        item: \"\",\n        cost: \"\",\n        note: \"\"\n      });\n      setEditIndex(null);\n      setIsModalOpen(false);\n    } catch (err) {\n      console.error(\"Error submitting statement:\", err);\n    }\n  };\n  const handleEditStatement = index => {\n    setNewStatement(statements[index]);\n    setEditIndex(index);\n    setIsModalOpen(true);\n  };\n  const handleDeleteStatement = async index => {\n    try {\n      const user = JSON.parse(localStorage.getItem(\"user\"));\n      const token = user === null || user === void 0 ? void 0 : user.token;\n      if (!token) {\n        alert(\"User not authenticated.\");\n        return;\n      }\n      const statementId = statements[index]._id || statements[index].id;\n      await deleteStatement(statementId, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setStatements(statements.filter((_, i) => i !== index));\n    } catch (err) {\n      var _err$response2;\n      console.error(\"Error deleting statement:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n    }\n  };\n  const handleCloseModal = () => {\n    setNewStatement({\n      date: \"\",\n      item: \"\",\n      cost: \"\",\n      note: \"\"\n    });\n    setIsModalOpen(false);\n    setEditIndex(null);\n  };\n  const filteredStatements = [...statements].filter(s => s.item.toLowerCase().includes(searchTerm.toLowerCase())).sort((a, b) => {\n    if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\n    if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\n    return 0;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statement-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Statements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsModalOpen(true),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by item...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortKey,\n          onChange: e => setSortKey(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Sort by Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cost\",\n            children: \"Sort by Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredStatements.map((statement, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), \" \", statement.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Goal:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), \" \", statement.item]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Cost:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), \" \\u20B9\", statement.cost]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), statement.note && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Note:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), \" \", statement.note]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statement1-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEditStatement(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteStatement(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, statement._id || statement.id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expensse-slot\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Total Expense: \\u20B9\", calculateTotalExpense()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: monthlyExpenses > monthlyBudget ? \"red\" : \"green\"\n          },\n          children: [\"This Month: \\u20B9\", monthlyExpenses, \" / \\u20B9\", monthlyBudget]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Expense Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), lineChartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(LineChart, {\n            data: lineChartData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Line, {\n              type: \"monotone\",\n              dataKey: \"cost\",\n              stroke: \"#82ca9d\",\n              strokeWidth: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No data to display\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: editIndex !== null ? \"Edit Statement\" : \"Add Statement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: newStatement.date,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            date: e.target.value\n          }),\n          placeholder: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newStatement.item,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            item: e.target.value\n          }),\n          placeholder: \"Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: newStatement.cost,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            cost: e.target.value\n          }),\n          placeholder: \"Cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newStatement.note,\n          onChange: e => setNewStatement({\n            ...newStatement,\n            note: e.target.value\n          }),\n          placeholder: \"Optional Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmitStatement,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(Statement, \"aHKUb5ipi/oLet98eXTCKR1HtYE=\");\n_c = Statement;\nexport default Statement;\nvar _c;\n$RefreshReg$(_c, \"Statement\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","Tooltip","CartesianGrid","ResponsiveContainer","fetchStatements","createStatement","updateStatement","deleteStatement","jsxDEV","_jsxDEV","Statement","_s","statements","setStatements","isModalOpen","setIsModalOpen","newStatement","setNewStatement","date","item","cost","note","editIndex","setEditIndex","searchTerm","setSearchTerm","sortKey","setSortKey","monthlyBudget","getStatements","user","JSON","parse","localStorage","getItem","token","id","console","warn","res","headers","Authorization","data","err","_err$response","error","response","message","calculateTotalExpense","reduce","total","s","parseFloat","toFixed","currentMonth","Date","getMonth","monthlyExpenses","filter","alert","lineChartData","map","sort","a","b","handleSubmitStatement","statementToSend","userId","statementId","_id","updatedStatements","handleEditStatement","index","handleDeleteStatement","_","i","_err$response2","handleCloseModal","filteredStatements","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","statement","style","color","length","width","height","strokeDasharray","dataKey","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["D:/Bill Pocket Project/frontend/src/pages/statement.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  CartesianGrid,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport \"../CSS/statement.css\";\r\nimport {\r\n  fetchStatements,\r\n  createStatement,\r\n  updateStatement,\r\n  deleteStatement,\r\n} from \"../api\";\r\n\r\nfunction Statement() {\r\n  const [statements, setStatements] = useState([]);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newStatement, setNewStatement] = useState({\r\n    date: \"\",\r\n    item: \"\",\r\n    cost: \"\",\r\n    note: \"\",\r\n  });\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortKey, setSortKey] = useState(\"date\");\r\n  const monthlyBudget = 10000; // Set your monthly budget limit\r\n\r\n  // Fetch statements on mount\r\n  useEffect(() => {\r\n    const getStatements = async () => {\r\n      try {\r\n        const user = JSON.parse(localStorage.getItem(\"user\"));\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        if (!user || !user.id || !token) {\r\n          console.warn(\"⚠️ User or token is missing!\");\r\n          return;\r\n        }\r\n\r\n        const res = await fetchStatements({\r\n          headers: { Authorization: `Bearer ${token}` }, // Fix template literal here\r\n        });\r\n\r\n        setStatements(res.data);\r\n      } catch (err) {\r\n        console.error(\r\n          \"Error fetching statements:\",\r\n          err.response?.data || err.message\r\n        );\r\n      }\r\n    };\r\n    getStatements();\r\n  }, []);\r\n\r\n  const calculateTotalExpense = () =>\r\n    statements\r\n      .reduce((total, s) => total + parseFloat(s.cost || 0), 0)\r\n      .toFixed(2);\r\n\r\n  const currentMonth = new Date().getMonth();\r\n  const monthlyExpenses = statements\r\n    .filter((s) => new Date(s.date).getMonth() === currentMonth)\r\n    .reduce((total, s) => total + parseFloat(s.cost || 0), 0);\r\n\r\n  // 🔔 Monthly Budget Alert\r\n  useEffect(() => {\r\n    if (monthlyExpenses > monthlyBudget) {\r\n      alert(\"⚠️ You’ve exceeded your monthly budget!\");\r\n    } else if (monthlyExpenses > monthlyBudget * 0.9) {\r\n      alert(\"🔔 You’re close to your monthly budget.\");\r\n    }\r\n  }, [monthlyExpenses]);\r\n\r\n  const lineChartData = [...statements]\r\n    .map((s) => ({\r\n      date: s.date,\r\n      cost: parseFloat(s.cost),\r\n    }))\r\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\r\n\r\n  // Handles both add and update\r\n  const handleSubmitStatement = async () => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n       const token = localStorage.getItem(\"token\");\r\n\r\n      if (!user || !user.id || !token) {\r\n        alert(\"User not found or not authenticated.\");\r\n        return;\r\n      }\r\n\r\n      const statementToSend = { ...newStatement, userId: user.id };\r\n\r\n      if (editIndex !== null) {\r\n        // Update existing statement\r\n        const statementId = statements[editIndex]._id || statements[editIndex].id;\r\n        const res = await updateStatement(statementId, statementToSend, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        const updatedStatements = [...statements];\r\n        updatedStatements[editIndex] = res.data;\r\n        setStatements(updatedStatements);\r\n      } else {\r\n        // Create new statement\r\n        const res = await createStatement(statementToSend, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        setStatements([...statements, res.data]);\r\n      }\r\n\r\n      // Clear form and close modal\r\n      setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n      setEditIndex(null);\r\n      setIsModalOpen(false);\r\n    } catch (err) {\r\n      console.error(\r\n        \"Error submitting statement:\",\r\n        err\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleEditStatement = (index) => {\r\n    setNewStatement(statements[index]);\r\n    setEditIndex(index);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDeleteStatement = async (index) => {\r\n    try {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      const token = user?.token;\r\n\r\n      if (!token) {\r\n        alert(\"User not authenticated.\");\r\n        return;\r\n      }\r\n\r\n      const statementId = statements[index]._id || statements[index].id;\r\n\r\n      await deleteStatement(statementId, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      setStatements(statements.filter((_, i) => i !== index));\r\n    } catch (err) {\r\n      console.error(\"Error deleting statement:\", err.response?.data || err.message);\r\n    }\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setNewStatement({ date: \"\", item: \"\", cost: \"\", note: \"\" });\r\n    setIsModalOpen(false);\r\n    setEditIndex(null);\r\n  };\r\n\r\n  const filteredStatements = [...statements]\r\n    .filter((s) => s.item.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    .sort((a, b) => {\r\n      if (sortKey === \"cost\") return parseFloat(b.cost) - parseFloat(a.cost);\r\n      if (sortKey === \"date\") return new Date(b.date) - new Date(a.date);\r\n      return 0;\r\n    });\r\n\r\n  return (\r\n    <div className=\"statement-page\">\r\n      <div className=\"column\">\r\n        <div className=\"column-header\">\r\n          <h2>Statements</h2>\r\n          <button onClick={() => setIsModalOpen(true)}>Add</button>\r\n        </div>\r\n\r\n        {/* Filter & Sort Controls */}\r\n        <div className=\"controls\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search by item...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select value={sortKey} onChange={(e) => setSortKey(e.target.value)}>\r\n            <option value=\"date\">Sort by Date</option>\r\n            <option value=\"cost\">Sort by Cost</option>\r\n          </select>\r\n        </div>\r\n\r\n        <ul>\r\n          {filteredStatements.map((statement, index) => (\r\n            <li key={statement._id || statement.id || index}>\r\n              <span>\r\n                <strong>Date:</strong> {statement.date}\r\n              </span>\r\n              <span>\r\n                <strong>Goal:</strong> {statement.item}\r\n              </span>\r\n              <span>\r\n                <strong>Cost:</strong> ₹{statement.cost}\r\n              </span>\r\n              {statement.note && (\r\n                <span>\r\n                  <strong>Note:</strong> {statement.note}\r\n                </span>\r\n              )}\r\n              <div className=\"statement1-actions\">\r\n                <button onClick={() => handleEditStatement(index)}>Edit</button>\r\n                <button onClick={() => handleDeleteStatement(index)}>Delete</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <div className=\"expensse-slot\">\r\n          <span>Total Expense: ₹{calculateTotalExpense()}</span>\r\n          <span style={{ color: monthlyExpenses > monthlyBudget ? \"red\" : \"green\" }}>\r\n            This Month: ₹{monthlyExpenses} / ₹{monthlyBudget}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"chart-container\">\r\n          <h3>Expense Trend</h3>\r\n          {lineChartData.length > 0 ? (\r\n            <ResponsiveContainer width=\"100%\" height={300}>\r\n              <LineChart data={lineChartData}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#82ca9d\" strokeWidth={2} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          ) : (\r\n            <p>No data to display</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for Add/Edit */}\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h3>{editIndex !== null ? \"Edit Statement\" : \"Add Statement\"}</h3>\r\n            <input\r\n              type=\"date\"\r\n              value={newStatement.date}\r\n              onChange={(e) =>\r\n                setNewStatement({ ...newStatement, date: e.target.value })\r\n              }\r\n              placeholder=\"Date\"\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              value={newStatement.item}\r\n              onChange={(e) =>\r\n                setNewStatement({ ...newStatement, item: e.target.value })\r\n              }\r\n              placeholder=\"Item\"\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              value={newStatement.cost}\r\n              onChange={(e) =>\r\n                setNewStatement({ ...newStatement, cost: e.target.value })\r\n              }\r\n              placeholder=\"Cost\"\r\n            />\r\n            <textarea\r\n              value={newStatement.note}\r\n              onChange={(e) =>\r\n                setNewStatement({ ...newStatement, note: e.target.value })\r\n              }\r\n              placeholder=\"Optional Note\"\r\n            />\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleSubmitStatement}>Submit</button>\r\n              <button onClick={handleCloseModal}>Close</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Statement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}