{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.warn(\"⚠️ No authentication token found! Redirecting to login.\");\n    alert(\"⚠️ Authentication error! Please log in again.\");\n    window.location.href = \"/login\"; // ✅ Redirect if token is missing\n  }\n  return req;\n});\n\n// ✅ Get all statements for the authenticated user\nexport const getStatements = async () => {\n  try {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      console.error(\"⚠️ No token found! Redirecting to login.\");\n      alert(\"⚠️ Authentication error! Please log in again.\");\n      window.location.href = \"/login\"; // ✅ Redirect if token is missing\n      return;\n    }\n    const response = await API.get(\"/statements\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      } // ✅ Ensure token is\n    });\n    console.log(\"✅ Request successful. Data:\", response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error fetching statements:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n    throw error;\n  }\n};\n\n// ✅ Create a new statement\nexport const createStatement = async data => {\n  try {\n    const response = await axios.post(\"/statements\", newStatement);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Error creating statement:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n    throw error;\n  }\n};\n\n// ✅ Update a statement\nexport const updateStatement = async (id, data) => {\n  try {\n    const response = await axios.put(`${API_URL}/statements/${id}`, data, authHeaders());\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error updating statement:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n    throw error;\n  }\n};\n\n// ✅ Delete a statement\nexport const deleteStatement = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/statements/${id}`, authHeaders());\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Error deleting statement:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","console","warn","alert","window","location","href","getStatements","error","response","get","log","data","_error$response","createStatement","post","newStatement","_error$response2","updateStatement","id","put","API_URL","authHeaders","_error$response3","deleteStatement","delete","_error$response4"],"sources":["D:/Bill Pocket Project/frontend/src/api/statementAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000/api\" });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n        req.headers.Authorization = `Bearer ${token}`;\r\n    } else {\r\n        console.warn(\"⚠️ No authentication token found! Redirecting to login.\");\r\n        alert(\"⚠️ Authentication error! Please log in again.\");\r\n        window.location.href = \"/login\"; // ✅ Redirect if token is missing\r\n    }\r\n    return req;\r\n});\r\n\r\n// ✅ Get all statements for the authenticated user\r\nexport const getStatements = async () => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n        if (!token) {\r\n            console.error(\"⚠️ No token found! Redirecting to login.\");\r\n            alert(\"⚠️ Authentication error! Please log in again.\");\r\n            window.location.href = \"/login\"; // ✅ Redirect if token is missing\r\n            return;\r\n        }\r\n    const response = await API.get(\"/statements\", {\r\n        headers: { Authorization: `Bearer ${token}` } // ✅ Ensure token is\r\n\r\n    });\r\n    console.log(\"✅ Request successful. Data:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching statements:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Create a new statement\r\nexport const createStatement = async (data) => {\r\n  try {\r\n    const response = await axios.post(\"/statements\", newStatement);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating statement:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Update a statement\r\nexport const updateStatement = async (id, data) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/statements/${id}`, data, authHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating statement:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Delete a statement\r\nexport const deleteStatement = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/statements/${id}`, authHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting statement:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}