{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/api\";\n\n// Helper: Get auth headers\nconst authHeaders = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) throw new Error(\"Token not found. Please log in again.\");\n  return {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n};\n\n// ✅ Get all statements for the authenticated user\nexport const getStatements = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/statements`, authHeaders());\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"Error fetching statements:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n    throw error;\n  }\n};\n\n// ✅ Create a new statement\nexport const createStatement = async data => {\n  try {\n    const response = await axios.post(`${API_URL}/statements`, data, authHeaders());\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    console.error(\"Error creating statement:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error);\n    throw error;\n  }\n};\n\n// ✅ Update a statement\nexport const updateStatement = async (id, data) => {\n  try {\n    const response = await axios.put(`${API_URL}/statements/${id}`, data, authHeaders());\n    return response.data;\n  } catch (error) {\n    var _error$response3;\n    console.error(\"Error updating statement:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error);\n    throw error;\n  }\n};\n\n// ✅ Delete a statement\nexport const deleteStatement = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}/statements/${id}`, authHeaders());\n    return response.data;\n  } catch (error) {\n    var _error$response4;\n    console.error(\"Error deleting statement:\", ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","authHeaders","token","localStorage","getItem","Error","headers","Authorization","getStatements","response","get","data","error","_error$response","console","createStatement","post","_error$response2","updateStatement","id","put","_error$response3","deleteStatement","delete","_error$response4"],"sources":["D:/Bill Pocket Project/frontend/src/api/statementAPI.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Helper: Get auth headers\r\nconst authHeaders = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) throw new Error(\"Token not found. Please log in again.\");\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  };\r\n};\r\n\r\n// ✅ Get all statements for the authenticated user\r\nexport const getStatements = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/statements`, authHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching statements:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Create a new statement\r\nexport const createStatement = async (data) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/statements`, data, authHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error creating statement:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Update a statement\r\nexport const updateStatement = async (id, data) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/statements/${id}`, data, authHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating statement:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// ✅ Delete a statement\r\nexport const deleteStatement = async (id) => {\r\n  try {\r\n    const response = await axios.delete(`${API_URL}/statements/${id}`, authHeaders());\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error deleting statement:\", error.response?.data || error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAIG,KAAK,CAAC,uCAAuC,CAAC;EACpE,OAAO;IACLC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUL,KAAK;IAChC;EACF,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,GAAGV,OAAO,aAAa,EAAEC,WAAW,CAAC,CAAC,CAAC;IACxE,OAAOQ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACdC,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAAC;IAC1E,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,GAAG,MAAOJ,IAAI,IAAK;EAC7C,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMV,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,aAAa,EAAEW,IAAI,EAAEV,WAAW,CAAC,CAAC,CAAC;IAC/E,OAAOQ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAK,gBAAA;IACdH,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAK,gBAAA,GAAAL,KAAK,CAACH,QAAQ,cAAAQ,gBAAA,uBAAdA,gBAAA,CAAgBN,IAAI,KAAIC,KAAK,CAAC;IACzE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,eAAe,GAAG,MAAAA,CAAOC,EAAE,EAAER,IAAI,KAAK;EACjD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAMV,KAAK,CAACqB,GAAG,CAAC,GAAGpB,OAAO,eAAemB,EAAE,EAAE,EAAER,IAAI,EAAEV,WAAW,CAAC,CAAC,CAAC;IACpF,OAAOQ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAS,gBAAA;IACdP,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAS,gBAAA,GAAAT,KAAK,CAACH,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBV,IAAI,KAAIC,KAAK,CAAC;IACzE,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMU,eAAe,GAAG,MAAOH,EAAE,IAAK;EAC3C,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMV,KAAK,CAACwB,MAAM,CAAC,GAAGvB,OAAO,eAAemB,EAAE,EAAE,EAAElB,WAAW,CAAC,CAAC,CAAC;IACjF,OAAOQ,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAY,gBAAA;IACdV,OAAO,CAACF,KAAK,CAAC,2BAA2B,EAAE,EAAAY,gBAAA,GAAAZ,KAAK,CAACH,QAAQ,cAAAe,gBAAA,uBAAdA,gBAAA,CAAgBb,IAAI,KAAIC,KAAK,CAAC;IACzE,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}