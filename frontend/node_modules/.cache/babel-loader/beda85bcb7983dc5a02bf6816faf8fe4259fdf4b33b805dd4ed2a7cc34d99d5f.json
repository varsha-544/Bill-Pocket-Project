{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000/api'\n});\n\n// ✅ Add authentication token to every request using an interceptor\nAPI.interceptors.request.use(req => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    req.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.warn(\"⚠️ No authentication token found!\");\n  }\n  return req;\n});\n\n// ✅ Auth API (Register & Login)\nexport const register = async userData => API.post('/auth/register', userData);\nexport const login = async userData => {\n  try {\n    const response = await API.post('/auth/login', userData);\n    if (response.data.token && response.data.user) {\n      localStorage.setItem(\"token\", response.data.token); // ✅ Store token properly\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user)); // ✅ Store user info\n      console.log(\"✅ Token stored successfully!\", response.data.token);\n    } else {\n      console.error(\"⚠️ No token received from server.\");\n    }\n    return response.data;\n  } catch (err) {\n    console.error(\"Login error:\", err);\n    throw err;\n  }\n};\n\n// ✅ Goals API\nexport const fetchGoals = async () => API.get('/goals');\nexport const createGoal = async newGoal => API.post('/goals', newGoal);\nexport const updateGoal = async (id, updatedGoal) => API.put(`/goals/${id}`, updatedGoal);\nexport const deleteGoal = async id => API.delete(`/goals/${id}`);\n\n// ✅ Statements API (Improved handling)\nexport const fetchStatements = async () => {\n  const token = localStorage.getItem(\"token\");\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  console.log(\"✅ Checking token before request:\", token); // Debugging\n  console.log(\"✅ Checking user ID before request:\", user === null || user === void 0 ? void 0 : user.id); // Debugging\n\n  if (!token || !user || !user.id) {\n    console.error(\"⚠️ Authentication failed! Missing token or user ID.\");\n    alert(\"⚠️ Authentication error! Please log in again.\"); // ✅ Notify \n    return;\n  }\n  try {\n    const response = await API.get(`/statements?userId=${user.id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    console.error(\"Error fetching statements:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n    throw err;\n  }\n};\nexport const createStatement = async newStatement => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"⚠️ No authentication token found! Request blocked.\");\n    return;\n  }\n  try {\n    const response = await API.post('/statements', newStatement, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response2;\n    console.error(\"Error creating statement:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message);\n    throw err;\n  }\n};\nexport const updateStatement = async (id, updatedStatement) => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"⚠️ No authentication token found! Request blocked.\");\n    return;\n  }\n  try {\n    const response = await API.put(`/statements/${id}`, updatedStatement, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (err) {\n    var _err$response3;\n    console.error(\"Error updating statement:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : _err$response3.data) || err.message);\n    throw err;\n  }\n};\nexport const deleteStatement = async id => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"⚠️ No authentication token found! Request blocked.\");\n    return;\n  }\n  try {\n    await API.delete(`/statements/${id}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log(\"✅ Statement deleted successfully!\");\n  } catch (err) {\n    var _err$response4;\n    console.error(\"Error deleting statement:\", ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : _err$response4.data) || err.message);\n    throw err;\n  }\n};","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","token","localStorage","getItem","headers","Authorization","console","warn","register","userData","post","login","response","data","user","setItem","JSON","stringify","log","error","err","fetchGoals","get","createGoal","newGoal","updateGoal","id","updatedGoal","put","deleteGoal","delete","fetchStatements","parse","alert","_err$response","message","createStatement","newStatement","_err$response2","updateStatement","updatedStatement","_err$response3","deleteStatement","_err$response4"],"sources":["D:/Bill Pocket Project/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000/api' });\r\n\r\n// ✅ Add authentication token to every request using an interceptor\r\nAPI.interceptors.request.use((req) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    req.headers.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    console.warn(\"⚠️ No authentication token found!\");\r\n  }\r\n  return req;\r\n});\r\n\r\n// ✅ Auth API (Register & Login)\r\nexport const register = async (userData) => API.post('/auth/register', userData);\r\n\r\nexport const login = async (userData) => {\r\n  try {\r\n    const response = await API.post('/auth/login', userData);\r\n\r\n    if (response.data.token && response.data.user) {\r\n      localStorage.setItem(\"token\", response.data.token); // ✅ Store token properly\r\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user)); // ✅ Store user info\r\n      console.log(\"✅ Token stored successfully!\", response.data.token);\r\n    } else {\r\n      console.error(\"⚠️ No token received from server.\");\r\n    }\r\n\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"Login error:\", err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n// ✅ Goals API\r\nexport const fetchGoals = async () => API.get('/goals');\r\nexport const createGoal = async (newGoal) => API.post('/goals', newGoal);\r\nexport const updateGoal = async (id, updatedGoal) => API.put(`/goals/${id}`, updatedGoal);\r\nexport const deleteGoal = async (id) => API.delete(`/goals/${id}`);\r\n\r\n// ✅ Statements API (Improved handling)\r\nexport const fetchStatements = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n   console.log(\"✅ Checking token before request:\", token); // Debugging\r\n  console.log(\"✅ Checking user ID before request:\", user?.id); // Debugging\r\n\r\n  if (!token || !user || !user.id) {\r\n    console.error(\"⚠️ Authentication failed! Missing token or user ID.\");\r\n     alert(\"⚠️ Authentication error! Please log in again.\"); // ✅ Notify \r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await API.get(`/statements?userId=${user.id}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"Error fetching statements:\", err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const createStatement = async (newStatement) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.error(\"⚠️ No authentication token found! Request blocked.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await API.post('/statements', newStatement, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"Error creating statement:\", err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const updateStatement = async (id, updatedStatement) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.error(\"⚠️ No authentication token found! Request blocked.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await API.put(`/statements/${id}`, updatedStatement, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error(\"Error updating statement:\", err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const deleteStatement = async (id) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.error(\"⚠️ No authentication token found! Request blocked.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await API.delete(`/statements/${id}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n    console.log(\"✅ Statement deleted successfully!\");\r\n  } catch (err) {\r\n    console.error(\"Error deleting statement:\", err.response?.data || err.message);\r\n    throw err;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}